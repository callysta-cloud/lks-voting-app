name: lks-prod-pipeline

on:
  push:
    branches:
      - prod

jobs:
  build:
    name: Build and Push to ECR
    runs-on: [self-hosted, master]
    steps:
      - name: Update Docker
        run: sudo yum update -y && sudo yum install -y docker

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Images
        run: |
          docker build -t vote-prod-latest ./vote
          docker tag vote-prod-latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:vote-prod-latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:vote-prod-latest

          docker build -t result-prod-latest ./result
          docker tag result-prod-latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:result-prod-latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:result-prod-latest

          docker build -t worker-prod-latest ./worker
          docker tag worker-prod-latest ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:worker-prod-latest
          docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/lks-voting-image:worker-prod-latest

  deploy:
    name: Deploy to ECS and Notify
    runs-on: [self-hosted, master]
    needs: build
    steps:
      - name: Update ECS Task Definition and Services
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://vote/task-definition.json
          aws ecs update-service \
            --cluster lks-voting-cluster \
            --service lks-vote-service \
            --force-new-deployment
          aws ecs update-service \
            --cluster lks-voting-cluster \
            --service lks-result-service \
            --force-new-deployment
          aws ecs update-service \
            --cluster lks-voting-cluster \
            --service lks-worker-service \
            --force-new-deployment

      - name: Send SNS Notification
        run: |
          aws sns publish \
            --topic-arn ${{ secrets.AWS_SNS_ARN }} \
            --subject "Helo from <Provinsi>!" \
            --message "New version The Voting App from <Provinsi> is Released !!"

